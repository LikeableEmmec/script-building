local tweenservice = game:GetService("TweenService")
local physics = game:GetService("PhysicsService")
local http = game:GetService("HttpService")
local debris = game:GetService("Debris")

script.Name = http:GenerateGUID(false)

local main = LoadAssets(17246179753)
local map : Model = main:Get("football")
local football : BasePart = main:Get("ball")

print("running")

local joined = {}
local football_pos = football:GetPivot()

-- precalculations
map:PivotTo(map:GetPivot() * CFrame.new(0, 0.1, 0)) -- so if there is a spawn location, it spawns above it
football:PivotTo(football:GetPivot() * CFrame.new(0, 0.1, 0)) -- moves because map moved

physics:RegisterCollisionGroup("football")
physics:RegisterCollisionGroup("map")
physics:RegisterCollisionGroup("player")

physics:CollisionGroupSetCollidable("football","player", true)
physics:CollisionGroupSetCollidable("football", "map", true)
physics:CollisionGroupSetCollidable("football", "Default", false)

physics:CollisionGroupSetCollidable("player","player", false)
physics:CollisionGroupSetCollidable("player","Default", false)
physics:CollisionGroupSetCollidable("player", "map", false)

for _, part in pairs(map:GetDescendants()) do
	if part:IsA("BasePart") then
		part.Locked = true
		part.Archivable = false
		part.Anchored = true
		--part.CanQuery = false
		--part.CanTouch = false
		part.CollisionGroup = "map"
		--part.Name = http:GenerateGUID(false) -- force removers stay back
	end
end

-- start game
football.CollisionGroup =  "football"
football.Name = http:GenerateGUID(false) -- sircfenner stay back
map.Name = http:GenerateGUID(false) -- force removers stay back
--football.Archivable = false
football.Anchored = false
football.Locked = true
football.CustomPhysicalProperties = PhysicalProperties.new(0.01, 0.3, 50)

map.Parent = script
football.Parent = script

football:SetNetworkOwner(nil)

football_replacement = football:Clone()

-- joining
local on_cooldown = {}
local prox : ProximityPrompt = map:FindFirstChild("join_prox",true)

prox.Triggered:Connect(function(plr)
	if table.find(joined,plr) then return end
	
	table.insert(joined, plr)
	
	local front = Instance.new("Part")
	front.Massless = true
	front.Size = Vector3.new(4,6,4.5)
	front.CollisionGroup = "player"
	front.Transparency = 0.75
	
	local front_weld = Instance.new("Weld")
	front_weld.Name = "front_weld"
	front_weld.C0 =--[[ CFrame.new(0, 0, -1.5) * ]]CFrame.Angles(0, math.pi/2, 0)
	front_weld.Part0 = plr.Character.HumanoidRootPart
	front_weld.Part1 = front
	front_weld.Parent = front
	
	front.Parent = script
		
	local gui = prox:FindFirstChild("reminder"):Clone()
	gui.Parent = plr.PlayerGui
	
	task.delay(10,function()
		local fade = tweenservice:Create(gui.txt, TweenInfo.new(1),{TextTransparency = 1})
		fade:Play()
		
		fade.Completed:Connect(function()
			gui:Destroy()
		end)
	end)
	
	local nls=NLS([[
	-- sprinting

	local owner = getfenv().owner -- i dislike warnings while in studio >:[
	local uis = game:GetService("UserInputService")

	local forgiveness = 0.5 -- amount of time inbetween taps that will activate sprint
	local speed = 6 -- amount of walkspeed gained when sprinting

	local last_tick = tick()
	local sprinting = false

	local tackle = script:WaitForChild("tackle")
	local humanoid = owner.Character:FindFirstChildOfClass("Humanoid")

	if humanoid then
		if humanoid.WalkSpeed > 16 and not sprinting then
			humanoid.WalkSpeed = 16
		elseif humanoid.WalkSpeed > (16 + speed) and sprinting then
			humanoid.WalkSpeed = 16 + speed
		end

		humanoid:GetPropertyChangedSignal("WalkSpeed"):Connect(function()
			if humanoid.WalkSpeed > 16 and not sprinting then
				humanoid.WalkSpeed = 16
			elseif humanoid.WalkSpeed > (16 + speed) and sprinting then
				humanoid.WalkSpeed = 16 + speed
			end
		end)
	end

	uis.InputBegan:Connect(function(input,typing)
		if typing then return end

		if input.KeyCode == Enum.KeyCode.W then
			if tick()-last_tick < forgiveness then
				-- current tick happened within (forgiveness) seconds of last_tick, enable sprint
				sprinting = true
				owner.Character.Humanoid.WalkSpeed = owner.Character.Humanoid.WalkSpeed + speed
				last_tick = tick()
			else
				-- too slow
				last_tick = tick()
			end
		elseif input.KeyCode == Enum.KeyCode.R then
			tackle:FireServer()
		end
	end)

	uis.InputEnded:Connect(function(input)	
		if input.KeyCode == Enum.KeyCode.W then
			if sprinting then
				sprinting = false
				owner.Character.Humanoid.WalkSpeed = owner.Character.Humanoid.WalkSpeed - speed
				last_tick = tick()
			end
		end
	end)
	]],plr.PlayerGui)
	
	local tackle = Instance.new("RemoteEvent")
	tackle.Name = "tackle"
	tackle.Archivable = false
	tackle.Parent = nls
	
	tackle.OnServerEvent:Connect(function(remplr)
		if remplr == plr then
			if table.find(on_cooldown, plr) then return end
			
			table.insert(on_cooldown, plr)
			
			local bodyvel = Instance.new("BodyVelocity") -- yeah i know its deprecated but its much easier to use
			bodyvel.Name = "tackle-vel"
			bodyvel.MaxForce = Vector3.new(math.huge,math.huge,math.huge)
			bodyvel.P = 100
			bodyvel.Velocity = plr.Character.HumanoidRootPart.CFrame.LookVector * 75
			bodyvel.Parent = plr.Character.HumanoidRootPart
			
			debris:AddItem(bodyvel, .1)
			
			--front.CanCollide = false
			
			task.delay(.1,function()
				front.CanCollide = true
				task.wait(1-.1)
				table.remove(on_cooldown, table.find(on_cooldown, plr))
			end)
		else
			print("naughty!!",remplr.Name)
			remplr.Character.Humanoid.Health = 0
			task.wait() -- give the game a moment to know the character died so it doesnt force back player position so explosion does like nothing
			local x=Instance.new("Explosion")
			x.Name = "naughty"
			x.Position = remplr.Character.Head.Position
			x.DestroyJointRadiusPercent = 0
			x.BlastRadius = 1
			x.Visible = true
			x.Parent = remplr.Character
		end
	end)
end)

-- win conditions
for _, win_part in pairs(map:GetDescendants()) do
	if win_part:IsA("BasePart") then
		if win_part.Name == "win condition" then
			win_part.Anchored = true
			win_part.Touched:Connect(function(hit)
				if hit == football and not football:FindFirstChildOfClass("BodyPosition") then
					
					local pos = Instance.new("BodyPosition") -- yeah i know its deprecated but its much easier to use
					pos.Position = football_pos.Position
					pos.P = 300
					pos.D = 100
					pos.MaxForce = Vector3.new(math.huge,math.huge,math.huge)
					pos.Parent = football
					
					football.CanCollide = false
					
					local countdown = football.countdown
					countdown.Enabled = true
					
					--task.spawn(function()
						--while task.wait() do
							--if pos.Parent ~= football then break end
							football.AssemblyLinearVelocity = Vector3.new()
							football.AssemblyAngularVelocity = Vector3.new()
					--	end
					--end)
					
					for i = 5, 0, -1 do
						countdown.txt.Text = i
						task.wait(1)
					end
					
					pos:Destroy()
					
					countdown.Enabled = false
					football.CanCollide = true
					
				end
			end)
		end
	end
end

-- extra
owner.Chatted:Connect(function(msg)
	if msg == "--resetball" then
		pcall(function() football:Destroy() end) -- im too lazy
		
		football = football_replacement:Clone()
		football_replacement = football:Clone()
		
		football.Anchored = false
		football.Parent = script
	end
end)
